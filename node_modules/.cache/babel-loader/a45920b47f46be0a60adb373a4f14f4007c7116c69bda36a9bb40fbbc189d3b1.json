{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\Guider\\\\my-app\\\\src\\\\components\\\\Modal\\\\ModalContent\\\\ModalContent.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from \"../../../hooks/hooks\";\nimport { useGetServiceQuery } from \"../../../store/api/api\";\nimport styles from \"./ModalContent.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalContent = () => {\n  _s();\n  const currentId = useAppSelector(state => state.services.currentId);\n  const {\n    data = {},\n    isFetching\n  } = useGetServiceQuery(currentId);\n  console.log(isFetching);\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalContent,\n    onClick: e => e.stopPropagation(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalContent, \"1JJKFkpTjM+t85z6XKLHXFaZAH8=\", false, function () {\n  return [useAppSelector, useGetServiceQuery];\n});\n_c = ModalContent;\nvar _c;\n$RefreshReg$(_c, \"ModalContent\");","map":{"version":3,"names":["useAppSelector","useGetServiceQuery","styles","jsxDEV","_jsxDEV","ModalContent","_s","currentId","state","services","data","isFetching","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","modalContent","onClick","e","stopPropagation","title","body","_c","$RefreshReg$"],"sources":["C:/ReactProjects/Guider/my-app/src/components/Modal/ModalContent/ModalContent.tsx"],"sourcesContent":["import { useAppSelector } from \"../../../hooks/hooks\"\r\nimport { useGetServiceQuery } from \"../../../store/api/api\"\r\nimport styles from \"./ModalContent.module.css\"\r\n\r\nexport const ModalContent = () => {\r\n    const currentId = useAppSelector(state => state.services.currentId)\r\n    const {data = {}, isFetching} = useGetServiceQuery(currentId)\r\n\r\n    console.log(isFetching)\r\n    if (isFetching) {\r\n        return <div>loading</div>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.modalContent} onClick={e => e.stopPropagation()}>\r\n            <div>\r\n                <h3>{data.title}</h3>\r\n                <p>{data.body}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,OAAOC,MAAM,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGP,cAAc,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACF,SAAS,CAAC;EACnE,MAAM;IAACG,IAAI,GAAG,CAAC,CAAC;IAAEC;EAAU,CAAC,GAAGV,kBAAkB,CAACM,SAAS,CAAC;EAE7DK,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACvB,IAAIA,UAAU,EAAE;IACZ,oBAAOP,OAAA;MAAAU,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7B;EAEA,oBACId,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,YAAa;IAACC,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAE;IAAAT,QAAA,eACnEV,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAKJ,IAAI,CAACc;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBd,OAAA;QAAAU,QAAA,EAAIJ,IAAI,CAACe;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAjBYD,YAAY;EAAA,QACHL,cAAc,EACAC,kBAAkB;AAAA;AAAAyB,EAAA,GAFzCrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}